# This configuration was automatically generated from a CircleCI 1.0 config.
# It should include any build commands you had along with commands that CircleCI
# inferred from your project structure. We strongly recommend you read all the
# comments in this file to understand the structure of CircleCI 2.0, as the idiom
# for configuration has changed substantially in 2.0 to allow arbitrary jobs rather
# than the prescribed lifecycle of 1.0. In general, we recommend using this generated
# configuration as a reference rather than using it in production, though in most
# cases it should duplicate the execution of your original 1.0 config.
version: 2
jobs:
  build_jessie:
    working_directory: ~/GNUAspell/aspell
    parallelism: 1
    # To see the list of pre-built images that CircleCI provides for most common languages see
    # https://circleci.com/docs/2.0/circleci-images/
    docker:
    - image: circleci/buildpack-deps:jessie
    steps:
    - checkout
    #
    - run: sudo sed -i 's;http://archive.debian.org/debian/;http://deb.debian.org/debian/;' /etc/apt/sources.list
    - run: sudo apt-get -y update
    - run: sudo apt-get -y install make autopoint texinfo libtool intltool bzip2 gettext clang-3.5 clang-4.0 g++-multilib 
    - run: sudo apt-get -y purge aspell
    #
    - run: ./autogen
    - run: ./sanity-check.sh
    - run: CXX="g++ -m32" CC="gcc -m32" ./sanity-check.sh
    - run: CXX=clang++-3.5 CC=clang-3.5 ./sanity-check.sh
    - run: CXX=clang++-4.0 CC=clang-4.0 ./sanity-check.sh
    - run: ./configure && make dist

  build_16_04:
    working_directory: ~/GNUAspell/aspell
    parallelism: 1
    #shell: /bin/bash --login
    # To see the list of pre-built images that CircleCI provides for most common languages see
    # https://circleci.com/docs/2.0/circleci-images/
    docker:
    - image: circleci/buildpack-deps:16.04
    steps:
    # Machine Setup
    #   If you break your build into multiple jobs with workflows, you will probably want to do the parts
    #   of this that are relevant in each
    # The following `checkout` command checks out your code to your working directory. In 1.0 we did this implicitly.
    # In 2.0 you can choose where in the course of a job your code should be checked out.
    - checkout
    #
    # note: default gcc version is 4.4
    - run: sudo apt-get -y update
    - run: sudo apt-get -y install make autopoint texinfo libtool intltool bzip2 gettext g++-multilib
        g++-4.9 g++-5
    - run: sudo apt-get -y purge aspell
    #
    - run:
        command: ./autogen
    - run:
        when: on_fail
        command: circleci-agent step halt
    - run:
        when: always
        command: ./sanity-check.sh
    - run:
        when: always
        command: CXX="g++ -m32" CC="gcc -m32" ./sanity-check.sh
    - run:
        when: always
        command: CXX=g++-4.9 CC=gcc-4.9 ./sanity-check.sh
    - run:
        when: always
        command: CXX=g++-5 CC=gcc-5 ./sanity-check.sh


  build_18_04:
    working_directory: ~/GNUAspell/aspell
    parallelism: 1
    #shell: /bin/bash --login
    # To see the list of pre-built images that CircleCI provides for most common languages see
    # https://circleci.com/docs/2.0/circleci-images/
    docker:
    - image: circleci/buildpack-deps:18.04
    steps:
    # Machine Setup
    #   If you break your build into multiple jobs with workflows, you will probably want to do the parts
    #   of this that are relevant in each
    # The following `checkout` command checks out your code to your working directory. In 1.0 we did this implicitly.
    # In 2.0 you can choose where in the course of a job your code should be checked out.
    - checkout
    #
    # note: default gcc version is 4.7
    - run: sudo apt-get -y update
    - run: sudo apt-get -y install make autopoint texinfo libtool intltool bzip2 gettext g++-multilib
        g++-4.8 g++-5 g++-6 clang-3.9 clang-4.0 clang-5.0 clang-6.0 
    - run: sudo apt-get -y purge aspell
    #
    - run:
        command: ./autogen
    - run:
        when: on_fail
        command: circleci-agent step halt
    - run:
        when: always
        command: ./sanity-check.sh
    - run:
        when: always
        command: CXX="g++ -m32" CC="gcc -m32" ./sanity-check.sh
    - run:
        when: always
        command: CXX=g++-4.8 CC=gcc-4.8 ./sanity-check.sh
    - run:
        when: always
        command: CXX=g++-5 CC=gcc-5 ./sanity-check.sh
    - run:
        when: always
        command: CXX=g++-6 CC=gcc-6 ./sanity-check.sh
    - run:
        when: always
        command: CXX=clang++-3.9 CC=clang-3.9 ./sanity-check.sh
    - run:
        when: always
        command: CXX=clang++-4.0 CC=clang-4.0 ./sanity-check.sh
    - run:
        when: always
        command: CXX=clang++-5.0 CC=clang-5.0 ./sanity-check.sh
    - run:
        when: always
        command: CXX=clang++-6.0 CC=clang-6.0 ./sanity-check.sh

  build_20_04:
    working_directory: ~/GNUAspell/aspell
    parallelism: 1
    #shell: /bin/bash --login
    # To see the list of pre-built images that CircleCI provides for most common languages see
    # https://circleci.com/docs/2.0/circleci-images/
    docker:
    - image: circleci/buildpack-deps:20.04
    steps:
    # Machine Setup
    #   If you break your build into multiple jobs with workflows, you will probably want to do the parts
    #   of this that are relevant in each
    # The following `checkout` command checks out your code to your working directory. In 1.0 we did this implicitly.
    # In 2.0 you can choose where in the course of a job your code should be checked out.
    - checkout
    #
    - run: sudo apt-get -y update
    - run: sudo apt-get -y install make autopoint texinfo libtool intltool bzip2 gettext g++-multilib
         g++-7 g++-8 g++-9 g++-10 clang-6.0 clang-7 clang-8 clang-9 clang-10
    - run: sudo apt-get -y purge aspell
    #
    - run:
        command: ./autogen
    - run:
        when: on_fail
        command: circleci-agent step halt
    - run:
        when: always
        command: ./sanity-check.sh
    - run:
        when: always
        command: CXX="g++ -m32" CC="gcc -m32" ./sanity-check.sh
    - run: 
        when: always
        command: CXX=g++-7 CC=gcc-9 ./sanity-check.sh
    - run: 
        when: always
        command: CXX=g++-8 CC=gcc-8 ./sanity-check.sh
    - run: 
        when: always
        command: CXX=g++-9 CC=gcc-9 ./sanity-check.sh
    - run: 
        when: always
        command: CXX=g++-10 CC=gcc-10 ./sanity-check.sh
    - run: 
        when: always
        command: CXX=clang++-6.0 CC=clang-6.0 ./sanity-check.sh
    - run: 
        when: always
        command: CXX=clang++-7 CC=clang-7 ./sanity-check.sh
    - run: 
        when: always
        command: CXX=clang++-8 CC=clang-8 ./sanity-check.sh
    - run: 
        when: always
        command: CXX=clang++-9 CC=clang-9 ./sanity-check.sh
    - run: 
        when: always
        command: CXX=clang++-10 CC=clang-10 ./sanity-check.sh
    - run: 
        when: always
        command: ./config-opt && make -C build -j2

  build_22_04:
    working_directory: ~/GNUAspell/aspell
    parallelism: 1
    #shell: /bin/bash --login
    # To see the list of pre-built images that CircleCI provides for most common languages see
    # https://circleci.com/docs/2.0/circleci-images/
    docker:
    - image: cimg/base:2022.12-22.04
    steps:
    # Machine Setup
    #   If you break your build into multiple jobs with workflows, you will probably want to do the parts
    #   of this that are relevant in each
    # The following `checkout` command checks out your code to your working directory. In 1.0 we did this implicitly.
    # In 2.0 you can choose where in the course of a job your code should be checked out.
    - checkout
    #
    - run: sudo apt-get -y update
    - run: sudo apt-get -y install make autopoint texinfo libtool intltool bzip2 gettext g++-multilib
         g++-10 g++-11 g++-12 clang-11 clang-12 clang-13 clang-14
    - run: sudo apt-get -y purge aspell
    #
    - run:
        command: ./autogen
    - run:
        when: on_fail
        command: circleci-agent step halt
    - run:
        when: always
        command: ./sanity-check.sh
    - run:
        when: always
        command: CXX="g++ -m32" CC="gcc -m32" ./sanity-check.sh
    - run: 
        when: always
        command: CXX=g++-10 CC=gcc-10 ./sanity-check.sh
    - run: 
        when: always
        command: CXX=g++-11 CC=gcc-11 ./sanity-check.sh
    - run: 
        when: always
        command: CXX=g++-12 CC=gcc-12 ./sanity-check.sh
    - run: 
        when: always
        command: CXX=clang++-11 CC=clang-11 ./sanity-check.sh
    - run: 
        when: always
        command: CXX=clang++-12 CC=clang-12 ./sanity-check.sh
    - run: 
        when: always
        command: CXX=clang++-13 CC=clang-13 ./sanity-check.sh
    - run: 
        when: always
        command: CXX=clang++-14 CC=clang-14 ./sanity-check.sh
    - run: 
        when: always
        command: ./config-opt && make -C build -j2

  build_20_04_mingw64:
    working_directory: ~/GNUAspell/aspell
    parallelism: 1
    #shell: /bin/bash --login
    # To see the list of pre-built images that CircleCI provides for most common languages see
    # https://circleci.com/docs/2.0/circleci-images/
    docker:
    - image: cimg/base:2022.12-20.04
    steps:
    # Machine Setup
    #   If you break your build into multiple jobs with workflows, you will probably want to do the parts
    #   of this that are relevant in each
    # The following `checkout` command checks out your code to your working directory. In 1.0 we did this implicitly.
    # In 2.0 you can choose where in the course of a job your code should be checked out.
    - checkout
    #
    # note: default gcc version is 8.3
    - run: sudo apt-get -y update
    - run: sudo apt-get -y install make autopoint texinfo libtool intltool bzip2 gettext g++-multilib mingw-w64
    - run: sudo apt-get -y purge aspell
    #
    - run: ./autogen
    - run: ./configure --host=x86_64-w64-mingw32 && make
    - run: make dist clean
    - run: ./configure --host=i686-w64-mingw32 && make
    - run: make dist clean

  build_22_04_mingw64:
    working_directory: ~/GNUAspell/aspell
    parallelism: 1
    #shell: /bin/bash --login
    # To see the list of pre-built images that CircleCI provides for most common languages see
    # https://circleci.com/docs/2.0/circleci-images/
    docker:
    - image: cimg/base:2022.12-22.04
    steps:
    # Machine Setup
    #   If you break your build into multiple jobs with workflows, you will probably want to do the parts
    #   of this that are relevant in each
    # The following `checkout` command checks out your code to your working directory. In 1.0 we did this implicitly.
    # In 2.0 you can choose where in the course of a job your code should be checked out.
    - checkout
    #
    # note: default gcc version is 8.3
    - run: sudo apt-get -y update
    - run: sudo apt-get -y install make autopoint texinfo libtool intltool bzip2 gettext g++-multilib mingw-w64
    - run: sudo apt-get -y purge aspell
    #
    - run: ./autogen
    - run: ./configure --host=x86_64-w64-mingw32 && make
    - run: make dist clean
    - run: ./configure --host=i686-w64-mingw32 && make
    - run: make dist clean

  tests:
    working_directory: ~/GNUAspell/aspell
    parallelism: 1
    docker:
    - image: circleci/buildpack-deps:20.04
    steps:
    # Machine Setup
    - checkout
    #
    - run: sudo apt-get -y update
    - run: sudo apt-get -y install make autopoint texinfo libtool intltool bzip2 gettext libipc-system-simple-perl
    - run: sudo apt-get -y purge aspell
    #
    - run: ./autogen
    - run: make -j2 -C test
    - run: rm test/build/Makefile
    - run: make SLOPPY=1 -j2 -C test

workflows:
  version: 2
  sanity_check:
    jobs:
      #- build_jessie
      #- build_16_04
      #- build_18_04
      #- build_20_04
      - build_22_04
      - build_20_04_mingw64
      - build_22_04_mingw64

  tests:
    jobs:
      - tests
